{"ast":null,"code":"var _jsxFileName = \"/Users/showrinbarua/Desktop/React Tutotrials and Practise/learn_react_with_mosh/counter-app/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 1\n      }, {\n        id: 2,\n        value: 2\n      }, {\n        id: 3,\n        value: 3\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.onDelete = counterId => {\n      this.setState({\n        counters: this.state.counters.filter(counter => counter.id !== counterId)\n      });\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(el => {\n        el.value = 0;\n        return el;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Reset\"), this.state.counters.map(counter => React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.onDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/showrinbarua/Desktop/React Tutotrials and Practise/learn_react_with_mosh/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","onDelete","counterId","setState","filter","counter","handleIncrement","index","indexOf","handleReset","map","el","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJM;AADN,KADqB;;AAAA,SAU7BC,QAV6B,GAUlBC,SAAS,IAAI;AACpB,WAAKC,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBM,MAApB,CACNC,OAAO,IAAIA,OAAO,CAACN,EAAR,KAAeG,SADpB;AADA,OAAd;AAKH,KAhB4B;;AAAA,SAkB7BI,eAlB6B,GAkBXD,OAAO,IAAI;AACzB,YAAMP,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMS,KAAK,GAAGT,QAAQ,CAACU,OAAT,CAAiBH,OAAjB,CAAd;AACAP,MAAAA,QAAQ,CAACS,KAAD,CAAR,GAAkB,EAAE,GAAGF;AAAL,OAAlB;AACAP,MAAAA,QAAQ,CAACS,KAAD,CAAR,CAAgBP,KAAhB;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACH,KAxB4B;;AAAA,SA0B7BW,WA1B6B,GA0Bf,MAAM;AAChB,YAAMX,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBC,EAAE,IAAI;AAC3CA,QAAAA,EAAE,CAACX,KAAH,GAAW,CAAX;AACA,eAAOW,EAAP;AACH,OAHgB,CAAjB;AAIA,WAAKR,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACH,KAhC4B;AAAA;;AAkC7Bc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAE,KAAKH,WADlB;AAEI,MAAA,SAAS,EAAC,4BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAOK,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBL,OAAO,IAC5B,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACN,EADjB;AAEI,MAAA,QAAQ,EAAE,KAAKE,QAFnB;AAGI,MAAA,WAAW,EAAE,KAAKK,eAHtB;AAII,MAAA,OAAO,EAAED,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAPL,CADJ;AAkBH;;AArD4B;;AAwDjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    state = {\r\n        counters: [\r\n            { id: 1, value: 1 },\r\n            { id: 2, value: 2 },\r\n            { id: 3, value: 3 },\r\n            { id: 4, value: 0 }\r\n        ]\r\n    };\r\n\r\n    onDelete = counterId => {\r\n        this.setState({\r\n            counters: this.state.counters.filter(\r\n                counter => counter.id !== counterId\r\n            )\r\n        });\r\n    };\r\n\r\n    handleIncrement = counter => {\r\n        const counters = [...this.state.counters];\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = { ...counter };\r\n        counters[index].value++;\r\n        this.setState({ counters });\r\n    };\r\n\r\n    handleReset = () => {\r\n        const counters = this.state.counters.map(el => {\r\n            el.value = 0;\r\n            return el;\r\n        });\r\n        this.setState({ counters });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    onClick={this.handleReset}\r\n                    className=\"btn btn-primary btn-sm m-2\"\r\n                >\r\n                    Reset\r\n                </button>\r\n                {this.state.counters.map(counter => (\r\n                    <Counter\r\n                        key={counter.id}\r\n                        onDelete={this.onDelete}\r\n                        onIncrement={this.handleIncrement}\r\n                        counter={counter}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;\r\n"]},"metadata":{},"sourceType":"module"}